{"version":3,"sources":["BooksAPI.js","componants/ShelfSelect.js","componants/Book.js","SearchPage.js","componants/Shelf.js","componants/BookShelves.js","MainPage.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","search","query","maxResults","fetch","method","body","JSON","stringify","then","res","json","data","books","ShelfSelect","currentShelf","onMove","book","className","defaultValue","onChange","e","target","value","disabled","Book","authors","title","image","shelf","style","width","height","backgroundImage","join","SearchPage","updateShelf","useState","setQuery","resultBooks","setResultBooks","noResults","setNoResults","useEffect","a","BooksAPI","error","forEach","myBook","id","console","log","result","to","type","placeholder","event","trim","updateQuery","map","imageLinks","smallThumbnail","Shelf","BookShelves","currentlyReadingBooks","filter","wantToReadBooks","readBooks","MainPage","App","setBooks","newShelf","newBooks","b","alert","getBooks","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAAMA,EAAM,wCAERC,EAAQC,aAAaD,MAEpBA,IAAOA,EAAQC,aAAaD,MAAQE,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAE5E,IAAMC,EAAU,CACdC,OAAQ,mBACRC,cAAeR,GAuBJS,EAAS,SAACC,EAAOC,GAAR,OACpBC,MAAM,GAAD,OAAIb,EAAJ,WAAkB,CACrBc,OAAQ,OACRP,QAAQ,2BACHA,GADE,IAEL,eAAgB,qBAElBQ,KAAMC,KAAKC,UAAU,CAAEN,QAAOC,iBAE7BM,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUA,EAAKC,U,eCxBVC,EAjBK,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KAC3C,OACE,qBAAKC,UAAU,qBAAf,SACE,yBACEC,aAAcJ,GAA8B,OAC5CK,SAAU,SAACC,GAAD,OAAOL,EAAOC,EAAMI,EAAEC,OAAOC,QAFzC,UAIE,wBAAQC,UAAQ,EAAhB,wBACA,wBAAQD,MAAM,mBAAd,+BACA,wBAAQA,MAAM,aAAd,0BACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,wBCWOE,EArBF,SAAC,GAAmD,EAAjDC,QAAkD,IAAzCC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,MAAOb,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KACpD,OACE,sBAAKC,UAAU,OAAf,UACE,sBAAKA,UAAU,WAAf,UACE,qBACEA,UAAU,aACVY,MAAO,CACLC,MAAO,IACPC,OAAQ,IACRC,gBAAgB,OAAD,OAASL,EAAT,QAGnB,cAAC,EAAD,CAAab,aAAcc,EAAOb,OAAQA,EAAQC,KAAMA,OAE1D,qBAAKC,UAAU,aAAf,SAA6BS,IAC7B,qBAAKT,UAAU,eAAf,SACGD,EAAKS,QAAUT,EAAKS,QAAQQ,KAAK,KAAO,WCmElCC,EA/EI,SAAC,GAA4B,IAA1BtB,EAAyB,EAAzBA,MAAOuB,EAAkB,EAAlBA,YAAkB,EACnBC,mBAAS,IADU,mBACtCnC,EADsC,KAC/BoC,EAD+B,OAEPD,mBAAS,IAFF,mBAEtCE,EAFsC,KAEzBC,EAFyB,OAGXH,oBAAS,GAHE,mBAGtCI,EAHsC,KAG3BC,EAH2B,KAyC7C,OA7BAC,qBAAU,WACM,KAAVzC,GACFsC,EAAe,IACfE,GAAa,IAED,uCAAG,4BAAAE,EAAA,sEACKC,EAAgB3C,GADrB,QACPQ,EADO,QAGLoC,OACNN,EAAe,IACfE,GAAa,KAEbhC,EAAIqC,SAAQ,SAAC9B,GACXA,EAAKY,MAAQ,OACbhB,EAAMkC,SAAQ,SAACC,GACTA,EAAOC,KAAOhC,EAAKgC,KACrBhC,EAAKY,MAAQmB,EAAOnB,aAI1BqB,QAAQC,IAAIzC,GACZ8B,EAAe9B,GACfgC,GAAa,IAjBF,2CAAH,oDAoBZU,KAED,CAAClD,IAGF,sBAAKgB,UAAU,eAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,cAAC,IAAD,CAAMmC,GAAG,IAAInC,UAAU,eAAvB,mBAGA,qBAAKA,UAAU,6BAAf,SACE,uBACEoC,KAAK,OACLC,YAAY,mCACZnC,SAAU,SAACoC,GAAD,OA3CA,SAACtD,GACnBoC,EAASpC,EAAMuD,QA0CcC,CAAYF,EAAMlC,OAAOC,eAIpD,qBAAKL,UAAU,uBAAf,SACE,qBAAIA,UAAU,aAAd,UACGqB,EAAYoB,KAAI,SAAC1C,GAAD,OACf,6BACE,cAAC,EAAD,CACES,QAAST,EAAKS,QACdC,MAAOV,EAAKU,MACZC,MACEX,EAAK2C,WAAa3C,EAAK2C,WAAWC,eAzDhD,kHA2DYZ,GAAIhC,EAAKgC,GACTpB,MAAOZ,EAAKY,MACZZ,KAAMA,EACND,OAAQoB,KAVHnB,EAAKgC,OAcfR,EAAY,mBAAqB,YCrD7BqB,EAvBD,SAAC,GAAmC,IAAjCnC,EAAgC,EAAhCA,MAAOd,EAAyB,EAAzBA,MAAOuB,EAAkB,EAAlBA,YAC7B,OACE,sBAAKlB,UAAU,YAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCS,IACjC,qBAAKT,UAAU,kBAAf,SACE,oBAAIA,UAAU,aAAd,SACGL,EAAM8C,KAAI,SAAC1C,GAAD,OACT,6BACE,cAAC,EAAD,CACES,QAAST,EAAKS,QACdC,MAAOV,EAAKU,MACZC,MAAOX,EAAK2C,WAAWC,eACvBhC,MAAOZ,EAAKY,MACZZ,KAAMA,EACND,OAAQoB,KAPHnB,EAAKgC,eCkBXc,EAxBK,SAAC,GAA4B,IAA1BlD,EAAyB,EAAzBA,MAAOuB,EAAkB,EAAlBA,YACtB4B,EAAwBnD,EAAMoD,QAClC,SAAChD,GAAD,MAAyB,qBAAfA,EAAKY,SAGXqC,EAAkBrD,EAAMoD,QAAO,SAAChD,GAAD,MAAyB,eAAfA,EAAKY,SAC9CsC,EAAYtD,EAAMoD,QAAO,SAAChD,GAAD,MAAyB,SAAfA,EAAKY,SAC9C,OACE,gCACE,cAAC,EAAD,CACEF,MAAM,oBACNd,MAAOmD,EACP5B,YAAaA,IAEf,cAAC,EAAD,CACET,MAAM,eACNd,MAAOqD,EACP9B,YAAaA,IAEf,cAAC,EAAD,CAAOT,MAAM,OAAOd,MAAOsD,EAAW/B,YAAaA,QCC1CgC,EAnBE,SAAC,GAA4B,IAA1BvD,EAAyB,EAAzBA,MAAOuB,EAAkB,EAAlBA,YACzB,OACE,qBAAKlB,UAAU,MAAf,SACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,2CAEF,sBAAKA,UAAU,qBAAf,UACE,8BACE,cAAC,EAAD,CAAaL,MAAOA,EAAOuB,YAAaA,MAE1C,qBAAKlB,UAAU,cAAf,SACE,cAAC,IAAD,CAAMmC,GAAG,UAAT,mC,OCqCGgB,MA5Cf,WAAgB,IAAD,EACahC,mBAAS,IADtB,mBACNxB,EADM,KACCyD,EADD,KAGPlC,EAAc,SAACnB,EAAMsD,GACzB,IAAMC,EAAW3D,EAAM8C,KAAI,SAACc,GAC1B,OAAIA,EAAExB,KAAOhC,EAAKgC,IAChBhC,EAAKY,MAAQ0C,EACNtD,GAEFwD,KAGTH,EAASE,GPCS,SAACvD,EAAMY,GAC3BzB,MAAM,GAAD,OAAIb,EAAJ,kBAAiB0B,EAAKgC,IAAM,CAC/B5C,OAAQ,MACRP,QAAQ,2BACHA,GADE,IAEL,eAAgB,qBAElBQ,KAAMC,KAAKC,UAAU,CAAEqB,YACtBpB,MAAK,SAACC,GAAD,OAASA,EAAIC,UORnBkC,CAAgB5B,EAAMsD,IAexB,OAZA5B,qBAAU,YACM,uCAAG,4BAAAC,EAAA,+EPRnBxC,MAAM,GAAD,OAAIb,EAAJ,UAAiB,CAAEO,YACrBW,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUA,EAAKC,SOMJ,OAEPH,EAFO,OAGb4D,EAAS5D,GAHI,gDAKbgE,MAAM,mCALO,yDAAH,qDAQdC,KACC,IAGD,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,OAAK,EACLC,KAAK,IACLC,QAAS,cAAC,EAAD,CAAUjE,MAAOA,EAAOuB,YAAaA,MAEhD,cAAC,IAAD,CACEwC,OAAK,EACLC,KAAK,UACLC,QAAS,cAAC,EAAD,CAAYjE,MAAOA,EAAOuB,YAAaA,UCxCxD2C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.c5cfb73f.chunk.js","sourcesContent":["const api = \"https://reactnd-books-api.udacity.com\";\n\nlet token = localStorage.token;\n\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n  Accept: \"application/json\",\n  Authorization: token,\n};\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.book);\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.books);\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ shelf }),\n  }).then((res) => res.json());\n\nexport const search = (query, maxResults) =>\n  fetch(`${api}/search`, {\n    method: \"POST\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ query, maxResults }),\n  })\n    .then((res) => res.json())\n    .then((data) => data.books);\n","const ShelfSelect = ({ currentShelf, onMove, book }) => {\r\n  return (\r\n    <div className=\"book-shelf-changer\">\r\n      <select\r\n        defaultValue={currentShelf ? currentShelf : \"none\"}\r\n        onChange={(e) => onMove(book, e.target.value)}\r\n      >\r\n        <option disabled>Move to...</option>\r\n        <option value=\"currentlyReading\">Currently Reading</option>\r\n        <option value=\"wantToRead\">Want to Read</option>\r\n        <option value=\"read\">Read</option>\r\n        <option value=\"none\">None</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShelfSelect;\r\n","import ShelfSelect from \"./ShelfSelect\";\r\nconst Book = ({ authors, title, image, shelf, onMove, book }) => {\r\n  return (\r\n    <div className=\"book\">\r\n      <div className=\"book-top\">\r\n        <div\r\n          className=\"book-cover\"\r\n          style={{\r\n            width: 128,\r\n            height: 193,\r\n            backgroundImage: `url(${image})`,\r\n          }}\r\n        ></div>\r\n        <ShelfSelect currentShelf={shelf} onMove={onMove} book={book} />\r\n      </div>\r\n      <div className=\"book-title\">{title}</div>\r\n      <div className=\"book-authors\">\r\n        {book.authors ? book.authors.join(\"-\") : \"NA\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Book;\r\n","import { Link } from \"react-router-dom\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Book from \"./componants/Book\";\r\n\r\nconst SearchPage = ({ books, updateShelf }) => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [resultBooks, setResultBooks] = useState([]);\r\n  const [noResults, setNoResults] = useState(false);\r\n\r\n  const emptyUrl =\r\n    \"http://books.google.com/books/content?id=73kNFV4sDx8C&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api\";\r\n\r\n  const updateQuery = (query) => {\r\n    setQuery(query.trim());\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (query === \"\") {\r\n      setResultBooks([]);\r\n      setNoResults(false);\r\n    } else {\r\n      const result = async () => {\r\n        const res = await BooksAPI.search(query);\r\n\r\n        if (res.error) {\r\n          setResultBooks([]);\r\n          setNoResults(true);\r\n        } else {\r\n          res.forEach((book) => {\r\n            book.shelf = \"none\";\r\n            books.forEach((myBook) => {\r\n              if (myBook.id === book.id) {\r\n                book.shelf = myBook.shelf;\r\n              }\r\n            });\r\n          });\r\n          console.log(res);\r\n          setResultBooks(res);\r\n          setNoResults(false);\r\n        }\r\n      };\r\n      result();\r\n    }\r\n  }, [query]);\r\n\r\n  return (\r\n    <div className=\"search-books\">\r\n      <div className=\"search-books-bar\">\r\n        <Link to=\"/\" className=\"close-search\">\r\n          Close\r\n        </Link>\r\n        <div className=\"search-books-input-wrapper\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search by title, author, or ISBN\"\r\n            onChange={(event) => updateQuery(event.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"search-books-results\">\r\n        <ol className=\"books-grid\">\r\n          {resultBooks.map((book) => (\r\n            <li key={book.id}>\r\n              <Book\r\n                authors={book.authors}\r\n                title={book.title}\r\n                image={\r\n                  book.imageLinks ? book.imageLinks.smallThumbnail : emptyUrl\r\n                }\r\n                id={book.id}\r\n                shelf={book.shelf}\r\n                book={book}\r\n                onMove={updateShelf}\r\n              />\r\n            </li>\r\n          ))}\r\n          {noResults ? \"No results found\" : \"\"}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","import Book from \"./Book\";\r\nconst Shelf = ({ title, books, updateShelf }) => {\r\n  return (\r\n    <div className=\"bookshelf\">\r\n      <h2 className=\"bookshelf-title\">{title}</h2>\r\n      <div className=\"bookshelf-books\">\r\n        <ol className=\"books-grid\">\r\n          {books.map((book) => (\r\n            <li key={book.id}>\r\n              <Book\r\n                authors={book.authors}\r\n                title={book.title}\r\n                image={book.imageLinks.smallThumbnail}\r\n                shelf={book.shelf}\r\n                book={book}\r\n                onMove={updateShelf}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Shelf;\r\n","import Shelf from \"./Shelf\";\r\n\r\nconst BookShelves = ({ books, updateShelf }) => {\r\n  const currentlyReadingBooks = books.filter(\r\n    (book) => book.shelf === \"currentlyReading\"\r\n  );\r\n\r\n  const wantToReadBooks = books.filter((book) => book.shelf === \"wantToRead\");\r\n  const readBooks = books.filter((book) => book.shelf === \"read\");\r\n  return (\r\n    <div>\r\n      <Shelf\r\n        title=\"Currently Reading\"\r\n        books={currentlyReadingBooks}\r\n        updateShelf={updateShelf}\r\n      />\r\n      <Shelf\r\n        title=\"Want to Read\"\r\n        books={wantToReadBooks}\r\n        updateShelf={updateShelf}\r\n      />\r\n      <Shelf title=\"Read\" books={readBooks} updateShelf={updateShelf} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookShelves;\r\n","import { Link } from \"react-router-dom\";\r\nimport BookShelves from \"./componants/BookShelves\";\r\n\r\nconst MainPage = ({ books, updateShelf }) => {\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"list-books\">\r\n        <div className=\"list-books-title\">\r\n          <h1>MyReads</h1>\r\n        </div>\r\n        <div className=\"list-books-content\">\r\n          <div>\r\n            <BookShelves books={books} updateShelf={updateShelf} />\r\n          </div>\r\n          <div className=\"open-search\">\r\n            <Link to=\"/search\">Add a book</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default MainPage;\r\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\n\nimport * as BooksAPI from \"./BooksAPI\";\nimport SearchPage from \"./SearchPage\";\nimport MainPage from \"./MainPage\";\nimport { Route, Routes } from \"react-router-dom\";\n\nfunction App() {\n  const [books, setBooks] = useState([]);\n\n  const updateShelf = (book, newShelf) => {\n    const newBooks = books.map((b) => {\n      if (b.id === book.id) {\n        book.shelf = newShelf;\n        return book;\n      }\n      return b;\n    });\n\n    setBooks(newBooks);\n    BooksAPI.update(book, newShelf);\n  };\n\n  useEffect(() => {\n    const getBooks = async () => {\n      try {\n        const res = await BooksAPI.getAll();\n        setBooks(res);\n      } catch (error) {\n        alert(\"Erorr: Server dosen't response!\");\n      }\n    };\n    getBooks();\n  }, []);\n\n  return (\n    <Routes>\n      <Route\n        exact\n        path=\"/\"\n        element={<MainPage books={books} updateShelf={updateShelf} />}\n      />\n      <Route\n        exact\n        path=\"/search\"\n        element={<SearchPage books={books} updateShelf={updateShelf} />}\n      />\n    </Routes>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}